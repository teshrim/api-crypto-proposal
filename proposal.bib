@inproceedings{ABF+,
  author={Yasemin Acar
    and Michael Backes
    and Sascha Fahl
    and Simson Garfinkel
    and Doowon Kim
    and Michelle L. Mazurek
    and Christian Stransky},
  booktitle={2017 IEEE Symposium on Security and Privacy (SP)},
  title={Comparing the Usability of Cryptographic {API}s},
  year={2017},
  volume={},
  number={},
  pages={154-171},
  keywords={application program interfaces;cryptography;software
    libraries;GitHub;Python developers;auxiliary features;code
      security;cryptographic API usability;cryptographic application programming
      interfaces;cryptographic library;cryptography errors;documentation
      accessibility;symmetric
      cryptography;Cryptography;Documentation;Guidelines;Libraries;Programming;Usability;API
      usability;controlled experiment;cryptography;usable security},
  doi={10.1109/SP.2017.52},
  ISSN={},
}

@inproceedings{BBN+,
  author="Bellare, Mihir
    and Brakerski, Zvika
    and Naor, Moni
    and Ristenpart, Thomas
    and Segev, Gil
    and Shacham, Hovav
    and Yilek, Scott",
  title="Hedged Public-Key Encryption: How to Protect against Bad Randomness",
  bookTitle="Advances in Cryptology -- ASIACRYPT 2009: 15th International
    Conference on the Theory and Application of Cryptology and Information
    Security, Tokyo, Japan, December 6-10, 2009. Proceedings",
  year="2009",
  pages="232--249",
  abstract="Public-key encryption schemes rely for their IND-CPA security on
    per-message fresh randomness. In practice, randomness may be of poor quality
    for a variety of reasons, leading to failure of the schemes. Expecting the
      systems to improve is unrealistic. What we show in this paper is that we
        can, instead, improve the cryptography to offset the lack of possible
        randomness. We provide public-key encryption schemes that achieve
        IND-CPA security when the randomness they use is of high quality, but,
        when the latter is not the case, rather than breaking completely, they
          achieve a weaker but still useful notion of security that we call
          IND-CDA. This hedged public-key encryption provides the best possible
          security guarantees in the face of bad randomness. We provide simple
          RO-based ways to make in-practice IND-CPA schemes hedge secure with
          minimal software changes. We also provide non-RO model schemes relying
          on lossy trapdoor functions (LTDFs) and techniques from deterministic
          encryption. They achieve adaptive security by establishing and
          exploiting the anonymity of LTDFs which we believe is of independent
          interest.",
        isbn="978-3-642-10366-7",
        doi="10.1007/978-3-642-10366-7_14",
        url="https://doi.org/10.1007/978-3-642-10366-7_14"
}

@inproceedings{BPS,
  author="Boldyreva, Alexandra
    and Patton, Christopher
    and Shrimpton, Thomas",
  title="Hedging Public-Key Encryption in the Real World",
  bookTitle="Advances in Cryptology -- CRYPTO 2017: 37th Annual International
    Cryptology Conference, Santa Barbara, CA, USA, August 20--24, 2017,
  Proceedings, Part III",
  year="2017",
  pages="462--494",
  abstract="Hedged PKE schemes are designed to provide useful security when the
    per-message randomness fails to be uniform, say, due to faulty
    implementations or adversarial actions. A simple and elegant theoretical
    approach to building such schemes works like this: Synthesize fresh random
    bits by hashing all of the encryption inputs, and use the resulting hash
    output as randomness for an underlying PKE scheme.",
  isbn="978-3-319-63697-9",
  doi="10.1007/978-3-319-63697-9_16",
  url="https://doi.org/10.1007/978-3-319-63697-9_16"
}

@misc{pkcs11,
  shorthand={PKCS11},
  editor={Susan Gleeson and Chris Zimman and Robert Griffin and Tim Hudson},
  title={{PKCS \#11} Cryptographic Token Interface Base Specification Version
    2.40 Plus Errata 01},
  year={2016},
  note={\url{http://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/pkcs11-base-v2.40.html}},
}

@inproceedings{SSW,
  author="Shrimpton, Thomas
    and Stam, Martijn
    and Warinschi, Bogdan",
  title="A Modular Treatment of Cryptographic APIs: The Symmetric-Key Case",
  bookTitle="Advances in Cryptology -- CRYPTO 2016: 36th Annual International
    Cryptology Conference, Santa Barbara, CA, USA, August 14-18, 2016,
  Proceedings, Part I",
  year="2016",
  pages="277--307",
  abstract="Application Programming Interfaces (APIs) to cryptographic tokens
    like smartcards and Hardware Security Modules (HSMs) provide users with
    commands to manage and use cryptographic keys stored on trusted hardware.
    Their design is mainly guided by industrial standards with only informal
    security promises.",
  isbn="978-3-662-53018-4",
  doi="10.1007/978-3-662-53018-4_11",
  url="https://doi.org/10.1007/978-3-662-53018-4_11"
}
